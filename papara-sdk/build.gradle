apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "kotlin-parcelize"

ext {
    bintrayRepo = "maven"
    bintrayName = "papara-sdk"

    publishedGroupId = "com.papara.sdk"
    libraryName = "PaparaSDK"
    artifact = "papara-sdk"

    libraryDescription = "Papara Android SDK"

    siteUrl = "https://github.com/paparateam/papara-android"
    gitUrl = "https://github.com/paparateam/papara-android.git"

    libraryVersion = "3.0.0"

    developerId = "papara"
    developerName = "Papara"
    developerEmail = "destek@papara.com"

    licenseName = "The MIT License (MIT)"
    licenseUrl = "https://github.com/paparateam/papara-android/blob/master/LICENSE"
    allLicenses = ["MIT"]
}

android {
    compileSdk 33
    namespace "com.papara.sdk"

    defaultConfig {
        minSdk 21
        targetSdk 33
        versionCode 2
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.core:core-ktx:1.10.0"
}


//group = publishedGroupId

//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging "aar"
//                groupId publishedGroupId
//                artifactId artifact
//
//                // Add your description here
//                name libraryName
//                description libraryDescription
//                url siteUrl
//
//                // Set your license
//                licenses {
//                    license {
//                        name licenseName
//                        url licenseUrl
//                    }
//                }
//                developers {
//                    developer {
//                        id developerId
//                        name developerName
//                        email developerEmail
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//
//                }
//            }
//        }
//    }
//}
//apply plugin: "com.jfrog.bintray"

//version = libraryVersion
//
//if (project.hasProperty("android")) { // Android libraries
//    task sourcesJar(type: Jar) {
//        classifier = "sources"
//        from android.sourceSets.main.java.srcDirs
//    }
//
//    task javadoc(type: Javadoc) {
//        source = android.sourceSets.main.java.srcDirs
//        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    }
//} else { // Java libraries
//    task sourcesJar(type: Jar, dependsOn: classes) {
//        classifier = "sources"
//        from sourceSets.main.allSource
//    }
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = "javadoc"
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//// Bintray
//Properties properties = new Properties()
//properties.load(project.rootProject.file("local.properties").newDataInputStream())

//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ["archives"]
//    pkg {
//        repo = bintrayRepo
//        name = bintrayName
//        desc = libraryDescription
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = allLicenses
//        publish = true
//        publicDownloadNumbers = true
//        version {
//            desc = libraryDescription
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password")
//                //Optional. The passphrase for GPG signing"
//            }
//        }
//    }
//}
